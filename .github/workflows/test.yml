name: API Workflow

on: [push, pull_request]

jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: newsletter
                ports:
                    - 5432:5432
        steps:
          - name: Checkout sources
            uses: actions/checkout@v2
    
          - name: Install stable toolchain
            uses: actions-rs/toolchain@v1
            with:
              profile: minimal
              toolchain: stable
              override: true
          - name: Migrate database
            run: |
                sudo apt-get install libpq-dev -y
                cargo install --version=0.6.0 sqlx-cli --no-default-features --features postgres,native-tls
                SKIP_DOCKER=true ./scripts/init_db.sh
          - name: Run cargo check
            uses: actions-rs/cargo@v1
            with:
              command: check
    
    test:
        name: Test Suite
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: newsletter
                ports:
                    - 5432:5432
        steps:
            - name: Checkout sources
              uses: actions/checkout@v2

            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                profile: minimal
                toolchain: stable
                override: true
            - name: Migrate database
              run: |
                sudo apt-get install libpq-dev -y
                cargo install --version=0.6.0 sqlx-cli --no-default-features --features postgres,native-tls
                SKIP_DOCKER=true ./scripts/init_db.sh
            - name: Run cargo test
              uses: actions-rs/cargo@v1
              with:
                command: test
    
    lints:
        name: Lints
        runs-on: ubuntu-latest
        steps:
          - name: Checkout sources
            uses: actions/checkout@v2
    
          - name: Install stable toolchain
            uses: actions-rs/toolchain@v1
            with:
              profile: minimal
              toolchain: stable
              override: true
              components: rustfmt, clippy
    
          - name: Run cargo fmt
            uses: actions-rs/cargo@v1
            with:
              command: fmt
              args: --all -- --check
    
          - name: Run cargo clippy
            uses: actions-rs/cargo@v1
            with:
              command: clippy
              args: -- -D warnings
    coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: newsletter
                ports:
                    - 5432:5432
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                toolchain: stable
                override: true

            - name: Migrate database
              run: |
                sudo apt-get install libpq-dev -y
                cargo install --version=0.6.2 sqlx-cli --no-default-features --features postgres,native-tls
                SKIP_DOCKER=true ./scripts/init_db.sh
            - name: Run cargo-tarpaulin
              uses: actions-rs/tarpaulin@v0.1.0
              with:
                  version: '0.15.0'
                  
            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              env: 
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
            
            - name: Archive code coverage results
              uses: actions/upload-artifact@v1
              with:
                name: code-coverage-report
                path: cobertura.xml