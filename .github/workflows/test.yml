name: API Workflow

on: [push, pull_request]

jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: newsletter
                ports:
                    - 5432:5432
        steps:
          - name: Checkout sources
            uses: actions/checkout@v2
    
          - name: Install stable toolchain
            uses: actions-rs/toolchain@v1
            with:
              profile: minimal
              toolchain: stable
              override: true
          - name: Migrate database
            run: |
                sudo apt-get install libpq-dev -y
                cargo install --version=0.6.0 sqlx-cli --no-default-features --features postgres,native-tls
                SKIP_DOCKER=true ./scripts/init_db.sh
          - name: Run cargo check
            uses: actions-rs/cargo@v1
            with:
              command: check
    
    test:
        name: Test Suite
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: newsletter
                ports:
                    - 5432:5432
        steps:
            - name: Checkout sources
              uses: actions/checkout@v2

            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                profile: minimal
                toolchain: stable
                override: true
            - name: Migrate database
              run: |
                sudo apt-get install libpq-dev -y
                cargo install --version=0.6.0 sqlx-cli --no-default-features --features postgres,native-tls
                SKIP_DOCKER=true ./scripts/init_db.sh
            - name: Run cargo test
              uses: actions-rs/cargo@v1
              with:
                command: test
    
    coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: newsletter
                ports:
                    - 5432:5432
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Install nightly toolchain
              uses: actions-rs/toolchain@v1
              with:
                toolchain: nightly
                override: true

            - name: Migrate database
              run: |
                sudo apt-get install libpq-dev -y
                cargo install --version=0.6.2 sqlx-cli --no-default-features --features postgres,native-tls
                SKIP_DOCKER=true ./scripts/init_db.sh

            - name: Run tests
              run: cargo test --verbose
              env:
                  CARGO_INCREMENTAL: '0'
                  RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
                  RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

            - name: rust-grcov
                # You may pin to the exact commit or the version.
                # uses: actions-rs/grcov@bb47b1ed7883a1502fa6875d562727ace2511248
              uses: actions-rs/grcov@v0.1.5
            - name: Launch the action
              uses: ewjoachim/coverage-comment-action@v1
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                COVERAGE_FILE: "./lcov.info"
                
            # - name: Codecov
            #     # You may pin to the exact commit or the version.
            #     # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
            #   uses: codecov/codecov-action@v3.1.0
            #   with:
            #       # Repository upload token - get it from codecov.io. Required only for private repositories
            #       # token: # optional
            #       # Specify whether the Codecov output should be verbose
            #       verbose: true
            #       fail_ci_if_error: true